{"version":3,"file":"ardb-f6387260.js","sources":["../../../../../../node_modules/ardb/lib/utils/log.js","../../../../../../node_modules/ardb/lib/models/block.js","../../../../../../node_modules/ardb/lib/models/transaction.js","../../../../../../node_modules/ardb/lib/ardb.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.log = exports.Log = exports.LOGS = void 0;\nvar LOGS;\n(function (LOGS) {\n    LOGS[LOGS[\"NO\"] = 0] = \"NO\";\n    LOGS[LOGS[\"YES\"] = 1] = \"YES\";\n    LOGS[LOGS[\"ARWEAVE\"] = 2] = \"ARWEAVE\";\n})(LOGS = exports.LOGS || (exports.LOGS = {}));\nclass Log {\n    constructor() {\n        this.logs = LOGS.ARWEAVE;\n    }\n    init(logLevel = LOGS.ARWEAVE, arweave) {\n        this.logs = logLevel;\n        this.arweave = arweave;\n        return this;\n    }\n    show(str, type = 'log') {\n        if (this.logs === LOGS.YES || (this.logs === LOGS.ARWEAVE && this.arweave.getConfig().api.logging)) {\n            console[type](str);\n        }\n    }\n}\nexports.Log = Log;\nexports.log = new Log();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst log_1 = require(\"../utils/log\");\nclass ArdbBlock {\n    constructor(obj) {\n        this._id = obj.id;\n        this._timestamp = obj.timestamp;\n        this._height = obj.height;\n        this._previous = obj.previous;\n    }\n    // Getters\n    get id() {\n        if (!this._id)\n            log_1.log.show(\"ID wasn't defined, make sure you have selected to return it.\");\n        return this._id;\n    }\n    get timestamp() {\n        if (!this._timestamp)\n            log_1.log.show(\"Timestamp wasn't defined, make sure you have selected to return it.\");\n        return this._timestamp;\n    }\n    get height() {\n        if (!this._height)\n            log_1.log.show(\"Height wasn't defined, make sure you have selected to return it.\");\n        return this._height;\n    }\n    get previous() {\n        if (!this._previous)\n            log_1.log.show(\"Previous wasn't defined, make sure you have selected to return it.\");\n        return this._previous;\n    }\n}\nexports.default = ArdbBlock;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst log_1 = require(\"../utils/log\");\nclass ArdbTransaction {\n    constructor(obj, arweave) {\n        this._id = obj.id;\n        this._anchor = obj.anchor;\n        this._signature = obj.signature;\n        this._recipient = obj.recipient;\n        this._owner = obj.owner;\n        this._fee = obj.fee;\n        this._quantity = obj.quantity;\n        this._data = obj.data;\n        this._tags = obj.tags;\n        this._block = obj.block;\n        if (obj.parent && obj.parent.id) {\n            this._parent = obj.parent;\n        }\n        this.arweave = arweave;\n    }\n    // Getters\n    get id() {\n        if (!this._id)\n            log_1.log.show(\"ID wasn't defined, make sure you have selected to return it.\");\n        return this._id;\n    }\n    get anchor() {\n        if (!this._anchor)\n            log_1.log.show(\"Anchor wasn't defined, make sure you have selected to return it.\");\n        return this._anchor;\n    }\n    get signature() {\n        if (!this._signature)\n            log_1.log.show(\"Signature wasn't defined, make sure you have selected to return it.\");\n        return this._signature;\n    }\n    get recipient() {\n        if (!this._recipient)\n            log_1.log.show(\"Recipient wasn't defined, make sure you have selected to return it.\");\n        return this._recipient;\n    }\n    get owner() {\n        if (!this._owner)\n            log_1.log.show(\"Owner wasn't defined, make sure you have selected to return it.\");\n        return this._owner;\n    }\n    get fee() {\n        if (!this._fee)\n            log_1.log.show(\"Fee wasn't defined, make sure you have selected to return it.\");\n        return this._fee;\n    }\n    get quantity() {\n        if (!this._quantity)\n            log_1.log.show(\"Quantity wasn't defined, make sure you have selected to return it.\");\n        return this._quantity;\n    }\n    get data() {\n        if (!this._data)\n            log_1.log.show(\"Data wasn't defined, make sure you have selected to return it.\");\n        return this._data;\n    }\n    get tags() {\n        if (!this._tags)\n            log_1.log.show(\"Tags wasn't defined, make sure you have selected to return it.\");\n        return this._tags;\n    }\n    get block() {\n        if (!this._block)\n            log_1.log.show(\"Block wasn't defined, make sure you have selected to return it.\");\n        return this._block;\n    }\n    get parent() {\n        if (!this._parent || !this._parent.id)\n            log_1.log.show(\"Parent wasn't defined, make sure you have selected to return it.\");\n        return this._parent;\n    }\n}\nexports.default = ArdbTransaction;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst block_1 = __importDefault(require(\"./models/block\"));\nconst transaction_1 = __importDefault(require(\"./models/transaction\"));\nconst log_1 = require(\"./utils/log\");\n/**\n * Arweave as a database.\n * To easily interact with Arweave's graphql endpoint.\n */\nclass ArDB {\n    /**\n     *\n     * @param arweave An arweave instance\n     * @param logLevel Show logs. 0 = false, 1 = true, 2 = if arweave instance has log enabled.\n     */\n    constructor(arweave, logLevel = log_1.LOGS.ARWEAVE) {\n        this.reqType = 'transactions';\n        this.options = {};\n        this.after = '';\n        this.afterRegex = /after: *\"([^\"]*)\"/gi;\n        this.emptyLinesRegex = /^\\s*[\\r\\n]/gm;\n        this.fields = [\n            'id',\n            'anchor',\n            'signature',\n            'recipient',\n            'owner',\n            'owner.address',\n            'owner.key',\n            'fee',\n            'fee.winston',\n            'fee.ar',\n            'quantity',\n            'quantity.winston',\n            'quantity.ar',\n            'data',\n            'data.size',\n            'data.type',\n            'tags',\n            'tags.name',\n            'tags.value',\n            'block',\n            'block.id',\n            'block.timestamp',\n            'block.height',\n            'block.previous',\n            'parent',\n            'parent.id',\n        ];\n        this.includes = new Set();\n        this.arweave = arweave;\n        log_1.log.init(logLevel, arweave);\n        this.includes = new Set(this.fields);\n    }\n    /**\n     * Get the current cursor (also known as `after`) in case you need to do extra manual work with it.\n     * @returns cursor\n     */\n    getCursor() {\n        return this.after;\n    }\n    /**\n     * Search is the first function called before doing a find.\n     * @param type What type of search are we going to do.\n     * @returns ardb\n     */\n    search(type = 'transactions') {\n        this.reqType = type;\n        this.options = {};\n        this.after = '';\n        return this;\n    }\n    /**\n     * Get transactions or blocks by transaction ID.\n     * @param id The transaction/block ID.\n     * @returns ardb\n     */\n    id(id) {\n        this.checkSearchType();\n        this.options.id = id;\n        this.options.ids = [id];\n        return this;\n    }\n    /**\n     * Get transactions or blocks by transaction IDs.\n     * @param ids A list of transactions/blocks IDs.\n     * @returns ardb\n     */\n    ids(ids) {\n        this.checkSearchType();\n        this.options.ids = ids;\n        this.options.id = ids[0];\n        return this;\n    }\n    /**\n     * Get transaction(s) per tag App-Name = name.\n     * @param name The App-Name value as string.\n     * @returns ardb\n     */\n    appName(name) {\n        this.checkSearchType();\n        this.tag('App-Name', [name]);\n        return this;\n    }\n    /**\n     * Get transaction(s) with the tag Content-Type = type.\n     * @param type Content-Type as string.\n     * @returns ardb\n     */\n    type(type) {\n        this.checkSearchType();\n        this.tag('Content-Type', [type]);\n        return this;\n    }\n    /**\n     * Get transaction(s) by a list of tags\n     * @param tags Array of objects with name (string) and values (array|string)\n     * @returns ardb\n     */\n    tags(tags) {\n        this.checkSearchType();\n        const ts = [];\n        for (const tag of tags) {\n            const values = typeof tag.values === 'string' ? [tag.values] : tag.values;\n            ts.push({\n                name: tag.name,\n                values,\n            });\n        }\n        const $oTags = this.options.tags && this.options.tags.length ? this.options.tags : [];\n        this.options.tags = [...ts, ...$oTags];\n        return this;\n    }\n    /**\n     * Get transaction(s) by this specific tag, if previous ones exists it will be added to the list of tags.\n     * @param name The tag name, ex: App-Name.\n     * @param values The tag value or an array of values.\n     * @returns ardb\n     */\n    tag(name, values) {\n        this.checkSearchType();\n        if (!this.options.tags) {\n            this.options.tags = [];\n        }\n        if (typeof values === 'string') {\n            values = [values];\n        }\n        this.options.tags.push({ name, values });\n        return this;\n    }\n    /**\n     * Get transaction(s) by owner(s).\n     * @param owners Owner address or a list of owners.\n     * @returns ardb\n     */\n    from(owners) {\n        this.checkSearchType();\n        if (typeof owners === 'string') {\n            owners = [owners];\n        }\n        this.options.owners = owners;\n        return this;\n    }\n    /**\n     * Get transaction(s) by recipient(s).\n     * @param recipients A recipient address or a list of recipients.\n     * @returns ardb\n     */\n    to(recipients) {\n        this.checkSearchType();\n        if (typeof recipients === 'string') {\n            recipients = [recipients];\n        }\n        this.options.recipients = recipients;\n        return this;\n    }\n    /**\n     * Get blocks with the min height.\n     * @param min The minimum height for the search.\n     * @returns ardb\n     */\n    min(min) {\n        this.checkSearchType();\n        if (!this.options.block) {\n            this.options.block = {};\n        }\n        this.options.block.min = min;\n        return this;\n    }\n    /**\n     * Get blocks by a max height.\n     * @param max The maximum height for the search.\n     * @returns ardb\n     */\n    max(max) {\n        this.checkSearchType();\n        if (!this.options.block) {\n            this.options.block = {};\n        }\n        this.options.block.max = max;\n        return this;\n    }\n    /**\n     * Limits the returned results, this only works with `find()`, `findOne()` will always have a limit of 1, and `findAll()` has no limit.\n     * @param limit A number between 1 and 100.\n     * @returns ardb\n     */\n    limit(limit) {\n        this.checkSearchType();\n        if (limit < 1) {\n            console.warn('Limit cannot be less than 1, setting it to 1.');\n            limit = 1;\n        }\n        else if (limit > 100) {\n            console.warn(\"Arweave GQL won't return more than 100 entries at once.\");\n        }\n        this.options.first = limit;\n        return this;\n    }\n    /**\n     * Sort blocks or transactions by DESC or ASC.\n     * @param sort HEIGHT_DESC or HEIGHT_ASC.\n     * @returns ardb\n     */\n    sort(sort) {\n        this.options.sort = sort;\n        return this;\n    }\n    /**\n     * Set a cursor for when to get started.\n     * @param after The cursor string.\n     * @returns ardb\n     */\n    cursor(after) {\n        this.checkSearchType();\n        this.options.after = after;\n        return this;\n    }\n    /**\n     * Returns only the specified fields for block(s) or transaction(s).\n     * @param fields The field or list of fields to return.\n     * @returns ardb\n     */\n    only(fields) {\n        // Empty the included fields.\n        this.includes = new Set();\n        if (typeof fields === 'string' && this.fields.indexOf(fields) !== -1) {\n            this.includes.add(fields);\n            this.validateIncludes();\n            return this;\n        }\n        const toInclude = [];\n        for (const field of fields) {\n            // @ts-ignore\n            if (this.fields.indexOf(field) !== -1) {\n                // @ts-ignore\n                toInclude.push(field);\n            }\n        }\n        if (toInclude.length) {\n            this.includes = new Set(toInclude);\n        }\n        this.validateIncludes();\n        return this;\n    }\n    /**\n     * Exclude fields from the returned results.\n     * @param fields A field or list of fields to exclude.\n     * @returns ardb\n     */\n    exclude(fields) {\n        // To make only() and exclude() work the same, re-add all fields to includes.\n        this.includes = new Set(this.fields);\n        if (typeof fields === 'string') {\n            this.includes.delete(fields);\n            this.validateIncludes();\n            return this;\n        }\n        for (const field of fields) {\n            this.includes.delete(field);\n        }\n        this.validateIncludes();\n        return this;\n    }\n    // Ready to run\n    /**\n     * Find a list of blocks or transactions based on the specified search filters.\n     * @param filters Optional. You can manually add the filters here instead of using our search methods.\n     * @returns A list of transactions or blocks.\n     */\n    find(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            if (!this.options.first) {\n                this.options.first = 10;\n            }\n            const query = this.construct();\n            return this.run(query);\n        });\n    }\n    /**\n     * Find a single\n     * @param filters\n     * @returns\n     */\n    findOne(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            this.options.first = 1;\n            const query = this.construct();\n            const txs = yield this.run(query);\n            return txs.length ? txs[0] : null;\n        });\n    }\n    findAll(filters = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.checkSearchType();\n            for (const filter of Object.keys(filters)) {\n                this.options[filter] = filters[filter];\n            }\n            this.options.first = 100;\n            const query = this.construct();\n            return this.runAll(query);\n        });\n    }\n    /**\n     * To run with the cursor\n     */\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.after || !this.after.length) {\n                log_1.log.show('next(): Nothing more to search.');\n                return;\n            }\n            const query = this.construct().replace(this.afterRegex, `after: \"${this.after}\"`);\n            const result = yield this.run(query);\n            return this.options.first === 1 ? (result.length ? result[0] : null) : result;\n        });\n    }\n    run(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            log_1.log.show('Running query:');\n            log_1.log.show(query);\n            const res = yield this.get(query);\n            if (!res)\n                return [];\n            if (res.transaction) {\n                return [new transaction_1.default(res.transaction, this.arweave)];\n            }\n            else if (res.block) {\n                return [new block_1.default(res.block)];\n            }\n            else if (res.transactions) {\n                const edges = res.transactions.edges;\n                if (edges && edges.length) {\n                    this.after = edges[edges.length - 1].cursor;\n                }\n                else {\n                    this.after = '';\n                }\n                return edges.map((edge) => new transaction_1.default(edge.node, this.arweave));\n            }\n            else if (res.blocks) {\n                const edges = res.blocks.edges;\n                if (edges && edges.length) {\n                    this.after = edges[edges.length - 1].cursor;\n                }\n                else {\n                    this.after = '';\n                }\n                return edges.map((edge) => new block_1.default(edge.node));\n            }\n        });\n    }\n    runAll(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let hasNextPage = true;\n            let edges = [];\n            let cursor = this.options.after || '';\n            let isTx = true;\n            while (hasNextPage) {\n                log_1.log.show('Running query:');\n                log_1.log.show(query);\n                const res = yield this.get(query);\n                if (!res) {\n                    return [];\n                }\n                if (res.transaction) {\n                    return [new transaction_1.default(res.transaction, this.arweave)];\n                }\n                else if (res.block) {\n                    return [new block_1.default(res.block)];\n                }\n                else if (res.transactions) {\n                    const r = res.transactions;\n                    if (r.edges && r.edges.length) {\n                        edges = edges.concat(r.edges);\n                        cursor = r.edges[r.edges.length - 1].cursor;\n                        query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n                    }\n                    hasNextPage = r.pageInfo.hasNextPage;\n                }\n                else if (res.blocks) {\n                    isTx = false;\n                    const r = res.blocks;\n                    if (r.edges && r.edges.length) {\n                        edges = edges.concat(r.edges);\n                        cursor = r.edges[r.edges.length - 1].cursor;\n                        query = query.replace(this.afterRegex, `after: \"${cursor}\"`);\n                    }\n                    hasNextPage = r.pageInfo.hasNextPage;\n                }\n            }\n            if (isTx) {\n                return edges.map((edge) => new transaction_1.default(edge.node, this.arweave));\n            }\n            else {\n                return edges.map((edge) => new block_1.default(edge.node));\n            }\n        });\n    }\n    /** Helpers */\n    checkSearchType() {\n        if (!this.reqType ||\n            (this.reqType !== 'transaction' &&\n                this.reqType !== 'block' &&\n                this.reqType !== 'transactions' &&\n                this.reqType !== 'blocks')) {\n            throw new Error('Invalid search type. Must provide one and it must be either \"transaction\", \"transactions\", \"block\" or \"blocks\"');\n        }\n    }\n    get(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.arweave.api.post('graphql', { query }, { headers: { 'content-type': 'application/json' } });\n            log_1.log.show('Returned result: ');\n            log_1.log.show(res.data.data);\n            return res.data.data;\n        });\n    }\n    construct() {\n        if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n            delete this.options.id;\n            if (this.reqType === 'transactions') {\n                delete this.options.height;\n            }\n            else {\n                delete this.options.owners;\n                delete this.options.recipients;\n                delete this.options.tags;\n                delete this.options.block;\n            }\n            if (!this.options.after) {\n                this.options.after = '';\n            }\n        }\n        else {\n            this.options = { id: this.options.id };\n        }\n        let params = JSON.stringify(this.options, null, 2)\n            .replace(/\"([^\"]+)\":/gm, '$1: ')\n            .replace('\"HEIGHT_DESC\"', 'HEIGHT_DESC')\n            .replace('\"HEIGHT_ASC\"', 'HEIGHT_ASC');\n        params = params.substring(1, params.length - 1);\n        let fields = '';\n        if (this.reqType === 'transaction' || this.reqType === 'transactions') {\n            let owner = '';\n            if (this.includes.has('owner')) {\n                owner = `owner {\n          ${this.includes.has('owner.address') ? 'address' : ''}\n          ${this.includes.has('owner.key') ? 'key' : ''}\n        }`;\n            }\n            let fee = '';\n            if (this.includes.has('fee')) {\n                fee = `fee {\n          ${this.includes.has('fee.winston') ? 'winston' : ''}\n          ${this.includes.has('fee.ar') ? 'ar' : ''}\n        }`;\n            }\n            let quantity = '';\n            if (this.includes.has('quantity')) {\n                quantity = `quantity {\n          ${this.includes.has('quantity.winston') ? 'winston' : ''}\n          ${this.includes.has('quantity.ar') ? 'ar' : ''}\n        }`;\n            }\n            let data = '';\n            if (this.includes.has('data')) {\n                data = `data {\n          ${this.includes.has('data.size') ? 'size' : ''}\n          ${this.includes.has('data.type') ? 'type' : ''}\n        }`;\n            }\n            let tags = '';\n            if (this.includes.has('tags')) {\n                tags = `tags {\n          ${this.includes.has('tags.name') ? 'name' : ''}\n          ${this.includes.has('tags.value') ? 'value' : ''}\n        }`;\n            }\n            let block = '';\n            if (this.includes.has('block')) {\n                block = `block {\n          ${this.includes.has('block.id') ? 'id' : ''}\n          ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n          ${this.includes.has('block.height') ? 'height' : ''}\n          ${this.includes.has('block.previous') ? 'previous' : ''}\n        }`;\n            }\n            let parent = '';\n            if (this.includes.has('parent') || this.includes.has('parent.id')) {\n                // Parent only has an ID, so if one of them is included, add both.\n                parent = `parent {\n          id\n        }`;\n            }\n            fields = `\n      ${this.includes.has('id') ? 'id' : ''}\n      ${this.includes.has('anchor') ? 'anchor' : ''}\n      ${this.includes.has('signature') ? 'signature' : ''}\n      ${this.includes.has('recipient') ? 'recipient' : ''}\n      ${owner}\n      ${fee}\n      ${quantity}\n      ${data}\n      ${tags}\n      ${block}\n      ${parent}\n      `;\n            fields = fields.replace(this.emptyLinesRegex, '').trim();\n            if (!fields.length) {\n                fields = `\n        id\n        anchor\n        signature\n        recipient\n        owner {\n          address\n          key\n        }\n        fee {\n          winston\n          ar\n        }\n        quantity {\n          winston\n          ar\n        }\n        data {\n          size\n          type\n        }\n        tags {\n          name\n          value\n        }\n        block {\n          id\n          timestamp\n          height\n          previous\n        }\n        parent {\n          id\n        }`;\n            }\n        }\n        else {\n            fields = `\n      ${this.includes.has('block.id') ? 'id' : ''}\n      ${this.includes.has('block.timestamp') ? 'timestamp' : ''}\n      ${this.includes.has('block.height') ? 'height' : ''}\n      ${this.includes.has('block.previous') ? 'previous' : ''}\n      `;\n            fields = fields.replace(this.emptyLinesRegex, '').trim();\n            if (!fields.length) {\n                fields = `\n        id\n        timestamp\n        height\n        previous`;\n            }\n        }\n        if (this.reqType === 'transactions' || this.reqType === 'blocks') {\n            fields = `\n      pageInfo {\n        hasNextPage\n      }\n      edges { \n        cursor\n        node { \n          ${fields}\n        } \n      }`;\n        }\n        if (!this.reqType || !params) {\n            throw new Error('Invalid options. You need to first set your options!');\n        }\n        return `query {\n      ${this.reqType}(\n        ${params}\n      ){\n        ${fields}\n      }\n    }`.replace(/(\\r\\n|\\n|\\r)/gm, '');\n    }\n    validateIncludes() {\n        // Add all children if all of them are missing but a parent is present.\n        if (this.includes.has('owner') && !this.includes.has('owner.address') && !this.includes.has('owner.key')) {\n            this.includes.add('owner.address');\n            this.includes.add('owner.key');\n        }\n        if (this.includes.has('fee') && !this.includes.has('fee.winston') && !this.includes.has('fee.ar')) {\n            this.includes.add('fee.winston');\n            this.includes.add('fee.ar');\n        }\n        if (this.includes.has('quantity') && !this.includes.has('quantity.winston') && !this.includes.has('quantity.ar')) {\n            this.includes.add('quantity.winston');\n            this.includes.add('quantity.ar');\n        }\n        if (this.includes.has('data') && !this.includes.has('data.size') && !this.includes.has('data.type')) {\n            this.includes.add('data.size');\n            this.includes.add('data.type');\n        }\n        if (this.includes.has('tags') && !this.includes.has('tags.name') && !this.includes.has('tags.value')) {\n            this.includes.add('tags.name');\n            this.includes.add('tags.value');\n        }\n        if (this.includes.has('block') &&\n            !this.includes.has('block.timestamp') &&\n            !this.includes.has('block.height') &&\n            !this.includes.has('block.previous')) {\n            this.includes.add('block.id');\n            this.includes.add('block.timestamp');\n            this.includes.add('block.height');\n            this.includes.add('block.previous');\n        }\n        // Add a parent if one of the children is present but the parent is not\n        if (!this.includes.has('owner') && (this.includes.has('owner.address') || this.includes.has('owner.key'))) {\n            this.includes.add('owner');\n        }\n        if (!this.includes.has('fee') && (this.includes.has('fee.winston') || this.includes.has('fee.ar'))) {\n            this.includes.add('fee');\n        }\n        if (!this.includes.has('quantity') && (this.includes.has('quantity.winston') || this.includes.has('quantity.ar'))) {\n            this.includes.add('quantity');\n        }\n        if (!this.includes.has('data') && (this.includes.has('data.size') || this.includes.has('data.type'))) {\n            this.includes.add('data');\n        }\n        if (!this.includes.has('tags') && (this.includes.has('tags.name') || this.includes.has('tags.value'))) {\n            this.includes.add('tags');\n        }\n        if (!this.includes.has('block') &&\n            (this.includes.has('block.timestamp') || this.includes.has('block.height') || this.includes.has('block.previous'))) {\n            this.includes.add('block');\n        }\n    }\n}\nexports.default = ArDB;\n"],"names":["exports","LOGS","Log","logLevel","arweave","str","type","block","log_1","require$$0","ArdbBlock","obj","transaction","ArdbTransaction","__awaiter","this","thisArg","_arguments","P","generator","adopt","value","resolve","reject","fulfilled","step","e","rejected","result","__importDefault","mod","ardb","block_1","transaction_1","require$$1","require$$2","ArDB","id","ids","name","tags","ts","tag","values","$oTags","owners","recipients","min","max","limit","sort","after","fields","toInclude","field","filters","filter","query","txs","res","edges","edge","hasNextPage","cursor","isTx","params","owner","fee","quantity","data","parent","_default"],"mappings":"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"}