{"version":3,"file":"index-f3824ee7.js","sources":["../../../../../../node_modules/js-cookie/src/js.cookie.js","../../../../../../node_modules/immortal-db/src/cookie-store.js","../../../../../../node_modules/idb-keyval/dist/idb-keyval.mjs","../../../../../../node_modules/immortal-db/src/indexed-db.js","../../../../../../node_modules/immortal-db/src/web-storage.js","../../../../../../node_modules/immortal-db/src/index.js"],"sourcesContent":["/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","//\n// ImmortalDB - A resilient key-value store for browsers.\n//\n// Ansgar Grunseid\n// grunseid.com\n// grunseid@gmail.com\n//\n// License: MIT\n//\n\nimport Cookies from 'js-cookie'\n\nconst DEFAULT_COOKIE_TTL = 365 // Days.\n// If this script is executing in a cross-origin iframe, the cookie must\n// be set with SameSite=None and Secure=true. See\n// https://web.dev/samesite-cookies-explained/ and\n// https://tools.ietf.org/html/draft-west-cookie-incrementalism-00 for\n// details on SameSite and cross-origin behavior.\nconst CROSS_ORIGIN_IFRAME = amIInsideACrossOriginIframe()\nconst DEFAULT_SECURE = (CROSS_ORIGIN_IFRAME ? true : false)\nconst DEFAULT_SAMESITE = (CROSS_ORIGIN_IFRAME ? 'None' : 'Lax')\n\nfunction amIInsideACrossOriginIframe () {\n  try {\n    // Raises ReferenceError if window isn't defined, eg if executed\n    // outside a browser.\n    //\n    // If inside a cross-origin iframe, raises: Uncaught\n    // DOMException: Blocked a frame with origin \"...\" from\n    // accessing a cross-origin frame.\n    return !Boolean(window.top.location.href)\n  } catch (err) {\n    return true\n  }\n}\n\nclass CookieStore {\n  constructor ({\n      ttl = DEFAULT_COOKIE_TTL,\n      secure = DEFAULT_SECURE,\n      sameSite = DEFAULT_SAMESITE} = {}) {\n    this.ttl = ttl\n    this.secure = secure\n    this.sameSite = sameSite\n\n    return (async () => this)()\n  }\n\n  async get (key) {\n    const value = Cookies.get(key)\n    return typeof value === 'string' ? value : undefined\n  }\n\n  async set (key, value) {\n    Cookies.set(key, value, this._constructCookieParams())\n  }\n\n  async remove (key) {\n    Cookies.remove(key, this._constructCookieParams())\n  }\n\n  _constructCookieParams () {\n    return {\n      expires: this.ttl,\n      secure: this.secure,\n      sameSite: this.sameSite,\n    }\n  }\n}\n\nexport { CookieStore }\n","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(dbName, 1);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readonly', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readonly', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\n\nexport { Store, get, set, del, clear, keys };\n","//\n// ImmortalDB - A resilient key-value store for browsers.\n//\n// Ansgar Grunseid\n// grunseid.com\n// grunseid@gmail.com\n//\n// License: MIT\n//\n\nimport {\n  Store,\n  get as idbGet,\n  set as idbSet,\n  del as idbRemove,\n} from 'idb-keyval'\n\nconst DEFAULT_DATABASE_NAME = 'ImmortalDB'\nconst DEFAULT_STORE_NAME = 'key-value-pairs'\n\nclass IndexedDbStore {\n  constructor (dbName = DEFAULT_DATABASE_NAME, storeName = DEFAULT_STORE_NAME) {\n    this.store = new Store(dbName, storeName)\n\n    return (async () => {\n      // Safari throws a SecurityError if IndexedDB.open() is called in a\n      // cross-origin iframe.\n      //\n      //   SecurityError: IDBFactory.open() called in an invalid security context\n      //\n      // Catch such and fail gracefully.\n      //\n      // TODO(grun): Update idb-keyval's Store class to fail gracefully in\n      // Safari. Push the fix(es) upstream.\n      try {\n        await this.store._dbp\n      } catch (err) {\n        if (err.name === 'SecurityError') {\n          return null // Failed to open an IndexedDB database.\n        } else {\n          throw err\n        }\n      }\n\n      return this\n    })()\n  }\n\n  async get (key) {\n    const value = await idbGet(key, this.store)\n    return typeof value === 'string' ? value : undefined\n  }\n\n  async set (key, value) {\n    await idbSet(key, value, this.store)\n  }\n\n  async remove (key) {\n    await idbRemove(key, this.store)\n  }\n}\n\nexport { IndexedDbStore, DEFAULT_DATABASE_NAME, DEFAULT_STORE_NAME }\n","//\n// ImmortalDB - A resilient key-value store for browsers.\n//\n// Ansgar Grunseid\n// grunseid.com\n// grunseid@gmail.com\n//\n// License: MIT\n//\n\nclass StorageApiWrapper {\n  constructor (store) {\n    this.store = store\n\n    return (async () => this)()\n  }\n\n  async get (key) {\n    const value = this.store.getItem(key)\n    return typeof value === 'string' ? value : undefined\n  }\n\n  async set (key, value) {\n    this.store.setItem(key, value)\n  }\n\n  async remove (key) {\n    this.store.removeItem(key)\n  }\n}\n\nclass LocalStorageStore extends StorageApiWrapper {\n  constructor () {\n    super(window.localStorage)\n  }\n}\n\nclass SessionStorageStore extends StorageApiWrapper {\n  constructor () {\n    super(window.sessionStorage)\n  }\n}\n\nexport { LocalStorageStore, SessionStorageStore }\n","//\n// ImmortalDB - A resilient key-value store for browsers.\n//\n// Ansgar Grunseid\n// grunseid.com\n// grunseid@gmail.com\n//\n// License: MIT\n//\n\nimport { CookieStore } from './cookie-store'\nimport { IndexedDbStore } from './indexed-db'\nimport { LocalStorageStore, SessionStorageStore } from './web-storage'\n\nconst cl = console.log\nconst DEFAULT_KEY_PREFIX = '_immortal|'\nconst WINDOW_IS_DEFINED = (typeof window !== 'undefined')\n\n// Stores must implement asynchronous constructor, get(), set(), and\n// remove() methods.\nconst DEFAULT_STORES = [CookieStore]\ntry {\n  if (WINDOW_IS_DEFINED && window.indexedDB) {\n    DEFAULT_STORES.push(IndexedDbStore)\n  }\n} catch (err) {}\n\ntry {\n  if (WINDOW_IS_DEFINED && window.localStorage) {\n    DEFAULT_STORES.push(LocalStorageStore)\n  }\n} catch (err) {}\n\nfunction arrayGet (arr, index, _default = null) {\n  if (index in arr) {\n    return arr[index]\n  }\n  return _default\n}\n\nfunction countUniques (iterable) {\n  // A Map must be used instead of an Object because JavaScript is a\n  // buttshit language and all Object keys are serialized to strings.\n  // Thus undefined becomes 'undefined', null becomes 'null', etc. Then,\n  // in turn, 'undefined' can't be differentiated from undefined, null\n  // from 'null', etc, and countUniques([null, 'null']) would\n  // incorrectly return {'null': 2} instead of {null: 1, 'null': 1}.\n  //\n  // Unfortunately this Object behavior precludes the use of\n  // lodash.countBy() and similar methods which count with Objects\n  // instead of Maps.\n  const m = new Map()\n  let eles = iterable.slice()\n\n  for (const ele of eles) {\n    let count = 0\n    for (const obj of eles) {\n      if (ele === obj) {\n        count += 1\n      }\n    }\n\n    if (count > 0) {\n      m.set(ele, count)\n      eles = eles.filter(obj => obj !== ele)\n    }\n  }\n\n  return m\n}\n\nclass ImmortalStorage {\n  constructor (stores = DEFAULT_STORES) {\n    this.stores = []\n\n    // Initialize stores asynchronously. Accept both instantiated store\n    // objects and uninstantiated store classes. If the latter,\n    // implicitly instantiate instances thereof in this constructor.\n    //\n    // This constructor must accept both instantiated store objects and\n    // uninstantiated store classes because it's impossible to export\n    // ImmortalStore if it only took store objects initialized\n    // asynchronously. Like:\n    //\n    //   ;(async () => {\n    //       const cookieStore = await CookieStore()\n    //       const ImmortalDB = new ImmortalStorage([cookieStore])\n    //       export { ImmortalDB }  // <----- Doesn't work.\n    //   })\n    //\n    // So to export a synchronous ImmortalStorage class, datastore\n    // classes (whose definitions are synchronous) must be accepted in\n    // addition to instantiated store objects.\n    this.onReady = (async () => {\n      this.stores = (await Promise.all(\n        stores.map(async StoreClassOrInstance => {\n          if (typeof StoreClassOrInstance === 'object') { // Store instance.\n            return StoreClassOrInstance\n          } else { // Store class.\n            try {\n              return await new StoreClassOrInstance() // Instantiate instance.\n            } catch (err) {\n              // TODO(grun): Log (where?) that the <Store> constructor Promise\n              // failed.\n              return null\n            }\n          }\n        }),\n      )).filter(Boolean)\n    })()\n  }\n\n  async get (key, _default = null) {\n    await this.onReady\n\n    const prefixedKey = `${DEFAULT_KEY_PREFIX}${key}`\n\n    const values = await Promise.all(\n      this.stores.map(async store => {\n        try {\n          return await store.get(prefixedKey)\n        } catch (err) {\n          cl(err)\n        }\n      }),\n    )\n\n    const counted = Array.from(countUniques(values).entries())\n    counted.sort((a, b) => a[1] <= b[1])\n\n    let value\n    const [firstValue, firstCount] = arrayGet(counted, 0, [undefined, 0])\n    const [secondValue, secondCount] = arrayGet(counted, 1, [undefined, 0])\n    if (\n      firstCount > secondCount ||\n      (firstCount === secondCount && firstValue !== undefined)\n    ) {\n      value = firstValue\n    } else {\n      value = secondValue\n    }\n\n    if (value !== undefined) {\n      await this.set(key, value)\n      return value\n    } else {\n      await this.remove(key)\n      return _default\n    }\n  }\n\n  async set (key, value) {\n    await this.onReady\n\n    key = `${DEFAULT_KEY_PREFIX}${key}`\n\n    await Promise.all(\n      this.stores.map(async store => {\n        try {\n          await store.set(key, value)\n        } catch (err) {\n          cl(err)\n        }\n      }),\n    )\n\n    return value\n  }\n\n  async remove (key) {\n    await this.onReady\n\n    key = `${DEFAULT_KEY_PREFIX}${key}`\n\n    await Promise.all(\n      this.stores.map(async store => {\n        try {\n          await store.remove(key)\n        } catch (err) {\n          cl(err)\n        }\n      }),\n    )\n  }\n}\n\nconst ImmortalDB = new ImmortalStorage()\n\nexport {\n  ImmortalDB,\n  ImmortalStorage,\n  CookieStore,\n  IndexedDbStore,\n  LocalStorageStore,\n  SessionStorageStore,\n  DEFAULT_STORES,\n  DEFAULT_KEY_PREFIX,\n}\n"],"names":["factory","registeredInModuleLoader","module","OldCookies","api","extend","i","result","attributes","key","decode","s","init","converter","set","value","stringifiedAttributes","attributeName","get","json","jar","cookies","parts","cookie","name","DEFAULT_COOKIE_TTL","CROSS_ORIGIN_IFRAME","amIInsideACrossOriginIframe","DEFAULT_SECURE","DEFAULT_SAMESITE","CookieStore","ttl","secure","sameSite","Cookies","Store","dbName","storeName","resolve","reject","openreq","type","callback","db","transaction","store","getDefaultStore","req","del","DEFAULT_DATABASE_NAME","DEFAULT_STORE_NAME","IndexedDbStore","err","idbGet","idbSet","idbRemove","StorageApiWrapper","LocalStorageStore","SessionStorageStore","cl","DEFAULT_KEY_PREFIX","WINDOW_IS_DEFINED","DEFAULT_STORES","arrayGet","arr","index","_default","countUniques","iterable","m","eles","ele","count","obj","ImmortalStorage","stores","StoreClassOrInstance","prefixedKey","values","counted","a","b","firstValue","firstCount","secondValue","secondCount","ImmortalDB"],"mappings":"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"}