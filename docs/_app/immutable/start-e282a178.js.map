{"version":3,"mappings":"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","names":["normalize_path","path","trailing_slash","decode_params","params","key","tracked_url_properties","make_trackable","url","callback","tracked","property","value","depth","opts","inspect","disable_hash","hash","i","buffer","native_fetch","input","init","cache","initial_fetch","resource","resolved","selector","script","ttl","body","subsequent_fetch","cached","param_pattern","parse_route_id","id","names","types","add_trailing_slash","affects_path","segment","segments","decoded_segment","match","is_last","content","name","type","rest","exec","matchers","matcher","parse","nodes","server_loads","dictionary","layouts_with_server_load","leaf","layouts","errors","route","pattern","n","create_layout_loader","create_leaf_loader","uses_server_data","ctx","switch_value","insert_hydration","target","afterUpdate","stores","navigated","title","mounted","$$invalidate","unsubscribe","page","__vitePreload","hooks","error","HttpError","status","Redirect","location","DATA_SUFFIX","unwrap_promises","object","_a","SCROLL_KEY","INDEX_KEY","routes","default_layout_loader","default_error_loader","scroll_positions","update_scroll_positions","index","scroll_state","create_client","invalidated","load_cache","callbacks","current","hydrated","started","autoscroll","updating","force_invalidation","root","current_history_index","scroll","hash_navigating","token","pending_invalidate","invalidate","intent","get_navigation_intent","update","goto","redirect_chain","nav_token","get_base_uri","navigate","noscroll","prefetch","load_route","navigation_result","server_fallback","handle_error","load_root_error_page","_b","native_navigation","change","details","post_update","pre_update","initialize","keepfocus","tabindex","tick","deep_linked","result","style","Root","navigation","add_url_properties","fn","get_navigation_result_from_branch","filtered","branch","branch_node","form","data","data_changed","node","previous","print_error","replacement","load_node","uses","loader","depends","deps","dep","href","load_input","requested","parent","_c","server_data_node","_d","_e","has_changed","url_changed","parent_changed","param","create_data_node","loaders","server_data","invalid_server_nodes","acc","invalid","load_data","server_data_nodes","branch_promises","j","p","err","error_load","load_nearest_error_page","invalidating","root_layout","root_error","is_external_url","base","normalized","should_block","delta","cancellable","blocked","accepted","routeId","onMount","pathnames","promises","pathname","r","load","props","e","trigger_prefetch","event","find_anchor","options","mousemove_timeout","handle_mousemove","a","is_svg_a_element","rel","link","node_ids","data_id","data_url","x","properties","prop","start","set_paths","paths","client","hydrate"],"sources":["../../../../../node_modules/@sveltejs/kit/src/utils/url.js","../../../../../node_modules/@sveltejs/kit/src/runtime/hash.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/fetcher.js","../../../../../node_modules/@sveltejs/kit/src/utils/routing.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/parse.js","../../../../generated/root.svelte","../../../../generated/client-matchers.js","../../../../generated/client-manifest.js","../../../../../node_modules/@sveltejs/kit/src/runtime/control.js","../../../../../node_modules/@sveltejs/kit/src/constants.js","../../../../../node_modules/@sveltejs/kit/src/utils/promises.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/client.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/start.js"],"sourcesContent":["const absolute = /^([a-z]+:)?\\/?\\//;\nconst scheme = /^[a-z]+:/;\n\n/**\n * @param {string} base\n * @param {string} path\n */\nexport function resolve(base, path) {\n\tif (scheme.test(path)) return path;\n\n\tconst base_match = absolute.exec(base);\n\tconst path_match = absolute.exec(path);\n\n\tif (!base_match) {\n\t\tthrow new Error(`bad base path: \"${base}\"`);\n\t}\n\n\tconst baseparts = path_match ? [] : base.slice(base_match[0].length).split('/');\n\tconst pathparts = path_match ? path.slice(path_match[0].length).split('/') : path.split('/');\n\n\tbaseparts.pop();\n\n\tfor (let i = 0; i < pathparts.length; i += 1) {\n\t\tconst part = pathparts[i];\n\t\tif (part === '.') continue;\n\t\telse if (part === '..') baseparts.pop();\n\t\telse baseparts.push(part);\n\t}\n\n\tconst prefix = (path_match && path_match[0]) || (base_match && base_match[0]) || '';\n\n\treturn `${prefix}${baseparts.join('/')}`;\n}\n\n/** @param {string} path */\nexport function is_root_relative(path) {\n\treturn path[0] === '/' && path[1] !== '/';\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nexport function normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/** @param {Record<string, string>} params */\nexport function decode_params(params) {\n\tfor (const key in params) {\n\t\t// input has already been decoded by decodeURI\n\t\t// now handle the rest that decodeURIComponent would do\n\t\tparams[key] = params[key]\n\t\t\t.replace(/%23/g, '#')\n\t\t\t.replace(/%3[Bb]/g, ';')\n\t\t\t.replace(/%2[Cc]/g, ',')\n\t\t\t.replace(/%2[Ff]/g, '/')\n\t\t\t.replace(/%3[Ff]/g, '?')\n\t\t\t.replace(/%3[Aa]/g, ':')\n\t\t\t.replace(/%40/g, '@')\n\t\t\t.replace(/%26/g, '&')\n\t\t\t.replace(/%3[Dd]/g, '=')\n\t\t\t.replace(/%2[Bb]/g, '+')\n\t\t\t.replace(/%24/g, '$');\n\t}\n\n\treturn params;\n}\n\n/**\n * URL properties that could change during the lifetime of the page,\n * which excludes things like `origin`\n * @type {Array<keyof URL>}\n */\nconst tracked_url_properties = ['href', 'pathname', 'search', 'searchParams', 'toString', 'toJSON'];\n\n/**\n * @param {URL} url\n * @param {() => void} callback\n */\nexport function make_trackable(url, callback) {\n\tconst tracked = new URL(url);\n\n\tfor (const property of tracked_url_properties) {\n\t\tlet value = tracked[property];\n\n\t\tObject.defineProperty(tracked, property, {\n\t\t\tget() {\n\t\t\t\tcallback();\n\t\t\t\treturn value;\n\t\t\t},\n\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\n\t// @ts-ignore\n\ttracked[Symbol.for('nodejs.util.inspect.custom')] = (depth, opts, inspect) => {\n\t\treturn inspect(url, opts);\n\t};\n\n\tdisable_hash(tracked);\n\n\treturn tracked;\n}\n\n/**\n * Disallow access to `url.hash` on the server and in `load`\n * @param {URL} url\n */\nexport function disable_hash(url) {\n\tObject.defineProperty(url, 'hash', {\n\t\tget() {\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot access event.url.hash. Consider using `$page.url.hash` inside a component instead'\n\t\t\t);\n\t\t}\n\t});\n}\n\n/**\n * Disallow access to `url.search` and `url.searchParams` during prerendering\n * @param {URL} url\n */\nexport function disable_search(url) {\n\tfor (const property of ['search', 'searchParams']) {\n\t\tObject.defineProperty(url, property, {\n\t\t\tget() {\n\t\t\t\tthrow new Error(`Cannot access url.${property} on a page with prerendering enabled`);\n\t\t\t}\n\t\t});\n\t}\n}\n","/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nexport function hash(value) {\n\tlet hash = 5381;\n\n\tif (typeof value === 'string') {\n\t\tlet i = value.length;\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else if (ArrayBuffer.isView(value)) {\n\t\tconst buffer = new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t\tlet i = buffer.length;\n\t\twhile (i) hash = (hash * 33) ^ buffer[--i];\n\t} else {\n\t\tthrow new TypeError('value must be a string or TypedArray');\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n","import { hash } from '../hash.js';\n\nlet loading = 0;\n\nconst native_fetch = window.fetch;\n\nexport function lock_fetch() {\n\tloading += 1;\n}\n\nexport function unlock_fetch() {\n\tloading -= 1;\n}\n\nif (import.meta.env.DEV) {\n\tlet can_inspect_stack_trace = false;\n\n\tconst check_stack_trace = async () => {\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\t\tcan_inspect_stack_trace = stack.includes('check_stack_trace');\n\t};\n\n\tcheck_stack_trace();\n\n\twindow.fetch = (input, init) => {\n\t\tconst url = input instanceof Request ? input.url : input.toString();\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\n\t\tconst heuristic = can_inspect_stack_trace ? stack.includes('load_node') : loading;\n\t\tif (heuristic) {\n\t\t\tconsole.warn(\n\t\t\t\t`Loading ${url} using \\`window.fetch\\`. For best results, use the \\`fetch\\` that is passed to your \\`load\\` function: https://kit.svelte.dev/docs/load#input-fetch`\n\t\t\t);\n\t\t}\n\n\t\tconst method = input instanceof Request ? input.method : init?.method || 'GET';\n\n\t\tif (method !== 'GET') {\n\t\t\tconst url = new URL(input instanceof Request ? input.url : input.toString(), document.baseURI)\n\t\t\t\t.href;\n\t\t\tcache.delete(url);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n} else {\n\twindow.fetch = (input, init) => {\n\t\tconst method = input instanceof Request ? input.method : init?.method || 'GET';\n\n\t\tif (method !== 'GET') {\n\t\t\tconst url = new URL(input instanceof Request ? input.url : input.toString(), document.baseURI)\n\t\t\t\t.href;\n\t\t\tcache.delete(url);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n}\n\nconst cache = new Map();\n\n/**\n * Should be called on the initial run of load functions that hydrate the page.\n * Saves any requests with cache-control max-age to the cache.\n * @param {RequestInfo | URL} resource\n * @param {string} resolved\n * @param {RequestInit} [opts]\n */\nexport function initial_fetch(resource, resolved, opts) {\n\tconst url = JSON.stringify(resource instanceof Request ? resource.url : resource);\n\n\tlet selector = `script[data-sveltekit-fetched][data-url=${url}]`;\n\n\tif (opts?.body && (typeof opts.body === 'string' || ArrayBuffer.isView(opts.body))) {\n\t\tselector += `[data-hash=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script?.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\n\t\tconst ttl = script.getAttribute('data-ttl');\n\t\tif (ttl) cache.set(resolved, { body, init, ttl: 1000 * Number(ttl) });\n\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn native_fetch(resource, opts);\n}\n\n/**\n * Tries to get the response from the cache, if max-age allows it, else does a fetch.\n * @param {string} resolved\n * @param {RequestInit} [opts]\n */\nexport function subsequent_fetch(resolved, opts) {\n\tconst cached = cache.get(resolved);\n\tif (cached) {\n\t\tif (performance.now() < cached.ttl) {\n\t\t\treturn new Response(cached.body, cached.init);\n\t\t}\n\n\t\tcache.delete(resolved);\n\t}\n\n\treturn native_fetch(resolved, opts);\n}\n","const param_pattern = /^(\\.\\.\\.)?(\\w+)(?:=(\\w+))?$/;\n\n/** @param {string} id */\nexport function parse_route_id(id) {\n\t/** @type {string[]} */\n\tconst names = [];\n\n\t/** @type {string[]} */\n\tconst types = [];\n\n\t// `/foo` should get an optional trailing slash, `/foo.json` should not\n\t// const add_trailing_slash = !/\\.[a-z]+$/.test(key);\n\tlet add_trailing_slash = true;\n\n\tconst pattern =\n\t\tid === ''\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${id\n\t\t\t\t\t\t.split(/(?:\\/|$)/)\n\t\t\t\t\t\t.filter(affects_path)\n\t\t\t\t\t\t.map((segment, i, segments) => {\n\t\t\t\t\t\t\tconst decoded_segment = decodeURIComponent(segment);\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(decoded_segment);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tnames.push(match[1]);\n\t\t\t\t\t\t\t\ttypes.push(match[2]);\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst is_last = i === segments.length - 1;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tdecoded_segment &&\n\t\t\t\t\t\t\t\t'/' +\n\t\t\t\t\t\t\t\t\tdecoded_segment\n\t\t\t\t\t\t\t\t\t\t.split(/\\[(.+?)\\]/)\n\t\t\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst match = param_pattern.exec(content);\n\t\t\t\t\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`Invalid param: ${content}. Params and matcher names can only have underscores and alphanumeric characters.`\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst [, rest, name, type] = match;\n\t\t\t\t\t\t\t\t\t\t\t\tnames.push(name);\n\t\t\t\t\t\t\t\t\t\t\t\ttypes.push(type);\n\t\t\t\t\t\t\t\t\t\t\t\treturn rest ? '(.*?)' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (is_last && content.includes('.')) add_trailing_slash = false;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\tcontent // allow users to specify characters on the file system in an encoded manner\n\t\t\t\t\t\t\t\t\t\t\t\t\t.normalize()\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We use [ and ] to denote parameters, so users must encode these on the file\n\t\t\t\t\t\t\t\t\t\t\t\t\t// system to match against them. We don't decode all characters since others\n\t\t\t\t\t\t\t\t\t\t\t\t\t// can already be epressed and so that '%' can be easily used directly in filenames\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Bb]/g, '[')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Dd]/g, ']')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// '#', '/', and '?' can only appear in URL path segments in an encoded manner.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// They will not be touched by decodeURI so need to be encoded here, so\n\t\t\t\t\t\t\t\t\t\t\t\t\t// that we can match against them.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We skip '/' since you can't create a file with it on any OS\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/#/g, '%23')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/\\?/g, '%3F')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// escape characters that have special meaning in regex\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\t\t\t\t\t\t\t\t\t\t\t); // TODO handle encoding\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.join('')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}${add_trailing_slash ? '/?' : ''}$`\n\t\t\t  );\n\n\treturn { pattern, names, types };\n}\n\n/**\n * Returns `false` for `(group)` segments\n * @param {string} segment\n */\nexport function affects_path(segment) {\n\treturn !/^\\([^)]+\\)$/.test(segment);\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {string[]} names\n * @param {string[]} types\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nexport function exec(match, names, types, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst params = {};\n\n\tfor (let i = 0; i < names.length; i += 1) {\n\t\tconst name = names[i];\n\t\tconst type = types[i];\n\t\tconst value = match[i + 1] || '';\n\n\t\tif (type) {\n\t\t\tconst matcher = matchers[type];\n\t\t\tif (!matcher) throw new Error(`Missing \"${type}\" param matcher`); // TODO do this ahead of time?\n\n\t\t\tif (!matcher(value)) return;\n\t\t}\n\n\t\tparams[name] = value;\n\t}\n\n\treturn params;\n}\n","import { exec, parse_route_id } from '../../utils/routing.js';\n\n/**\n * @param {import('types').CSRPageNodeLoader[]} nodes\n * @param {number[]} server_loads\n * @param {typeof import('__GENERATED__/client-manifest.js').dictionary} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nexport function parse(nodes, server_loads, dictionary, matchers) {\n\tconst layouts_with_server_load = new Set(server_loads);\n\n\treturn Object.entries(dictionary).map(([id, [leaf, layouts, errors]]) => {\n\t\tconst { pattern, names, types } = parse_route_id(id);\n\n\t\tconst route = {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, names, types, matchers);\n\t\t\t},\n\t\t\terrors: [1, ...(errors || [])].map((n) => nodes[n]),\n\t\t\tlayouts: [0, ...(layouts || [])].map(create_layout_loader),\n\t\t\tleaf: create_leaf_loader(leaf)\n\t\t};\n\n\t\t// bit of a hack, but ensures that layout/error node lists are the same\n\t\t// length, without which the wrong data will be applied if the route\n\t\t// manifest looks like `[[a, b], [c,], d]`\n\t\troute.errors.length = route.layouts.length = Math.max(\n\t\t\troute.errors.length,\n\t\t\troute.layouts.length\n\t\t);\n\n\t\treturn route;\n\t});\n\n\t/**\n\t * @param {number} id\n\t * @returns {[boolean, import('types').CSRPageNodeLoader]}\n\t */\n\tfunction create_leaf_loader(id) {\n\t\t// whether or not the route uses the server data is\n\t\t// encoded using the ones' complement, to save space\n\t\tconst uses_server_data = id < 0;\n\t\tif (uses_server_data) id = ~id;\n\t\treturn [uses_server_data, nodes[id]];\n\t}\n\n\t/**\n\t * @param {number | undefined} id\n\t * @returns {[boolean, import('types').CSRPageNodeLoader] | undefined}\n\t */\n\tfunction create_layout_loader(id) {\n\t\t// whether or not the layout uses the server data is\n\t\t// encoded in the layouts array, to save space\n\t\treturn id === undefined ? id : [layouts_with_server_load.has(id), nodes[id]];\n\t}\n}\n","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\timport { browser } from '$app/environment';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let form;\n\texport let data_0 = null;\n\texport let data_1 = null;\n\n\tif (!browser) {\n\t\tsetContext('__svelte__', stores);\n\t}\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} data={data_0}>\n\t\t<svelte:component this={components[1]} data={data_1} {form} />\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} data={data_0} {form} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\n\t\t\texport const nodes = [() => import('./nodes/0'),\n\t() => import('./nodes/1'),\n\t() => import('./nodes/2')];\n\n\t\t\texport const server_loads = [];\n\n\t\t\texport const dictionary = {\n\t\"\": [2]\n};\n\n\t\t\texport const hooks = {\n\t\t\t\thandleError: (({ error }) => { console.error(error) }),\n\t\t\t};","export class HttpError {\n\t/**\n\t * @param {number} status\n\t * @param {{message: string} extends App.Error ? (App.Error | string | undefined) : App.Error} body\n\t */\n\tconstructor(status, body) {\n\t\tthis.status = status;\n\t\tif (typeof body === 'string') {\n\t\t\tthis.body = { message: body };\n\t\t} else if (body) {\n\t\t\tthis.body = body;\n\t\t} else {\n\t\t\tthis.body = { message: `Error: ${status}` };\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this.body);\n\t}\n}\n\nexport class Redirect {\n\t/**\n\t * @param {number} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n}\n\n/**\n * @template {Record<string, unknown> | undefined} [T=undefined]\n */\nexport class ValidationError {\n\t/**\n\t * @param {number} status\n\t * @param {T} [data]\n\t */\n\tconstructor(status, data) {\n\t\tthis.status = status;\n\t\tthis.data = data;\n\t}\n}\n\n/**\n * Creates an `HttpError` object with an HTTP status code and an optional message.\n * This object, if thrown during request handling, will cause SvelteKit to\n * return an error response without invoking `handleError`\n * @param {number} status\n * @param {string | undefined} [message]\n */\nexport function error(status, message) {\n\treturn new HttpError(status, message);\n}\n\n/**\n * Creates a `Redirect` object. If thrown during request handling, SvelteKit will\n * return a redirect response.\n * @param {number} status\n * @param {string} location\n */\nexport function redirect(status, location) {\n\tif (isNaN(status) || status < 300 || status > 399) {\n\t\tthrow new Error('Invalid status code');\n\t}\n\n\treturn new Redirect(status, location);\n}\n\n/**\n * Generates a JSON `Response` object from the supplied data.\n * @param {any} data\n * @param {ResponseInit} [init]\n */\nexport function json(data, init) {\n\t// TODO deprecate this in favour of `Response.json` when it's\n\t// more widely supported\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-type')) {\n\t\theaders.set('content-type', 'application/json');\n\t}\n\n\treturn new Response(JSON.stringify(data), {\n\t\t...init,\n\t\theaders\n\t});\n}\n\n/**\n * Generates a `ValidationError` object.\n * @param {number} status\n * @param {Record<string, any> | undefined} [data]\n */\nexport function invalid(status, data) {\n\treturn new ValidationError(status, data);\n}\n","// in `vite dev` and `vite preview`, we use a fake asset path so that we can\n// serve local assets while verifying that requests are correctly prefixed\nexport const SVELTE_KIT_ASSETS = '/_svelte_kit_assets';\n\nexport const GENERATED_COMMENT = '// this file is generated — do not edit it\\n';\n\nexport const DATA_SUFFIX = '/__data.js';\n","/**\n * Given an object, return a new object where all top level values are awaited\n *\n * @param {Record<string, any>} object\n * @returns {Promise<Record<string, any>>}\n */\nexport async function unwrap_promises(object) {\n\tfor (const key in object) {\n\t\tif (typeof object[key]?.then === 'function') {\n\t\t\treturn Object.fromEntries(\n\t\t\t\tawait Promise.all(Object.entries(object).map(async ([key, value]) => [key, await value]))\n\t\t\t);\n\t\t}\n\t}\n\n\treturn object;\n}\n","import { onMount, tick } from 'svelte';\nimport { make_trackable, decode_params, normalize_path } from '../../utils/url.js';\nimport { find_anchor, get_base_uri, scroll_state } from './utils.js';\nimport { lock_fetch, unlock_fetch, initial_fetch, subsequent_fetch } from './fetcher.js';\nimport { parse } from './parse.js';\n\nimport Root from '__GENERATED__/root.svelte';\nimport { nodes, server_loads, dictionary, matchers, hooks } from '__GENERATED__/client-manifest.js';\nimport { HttpError, Redirect } from '../control.js';\nimport { stores } from './singletons.js';\nimport { DATA_SUFFIX } from '../../constants.js';\nimport { unwrap_promises } from '../../utils/promises.js';\n\nconst SCROLL_KEY = 'sveltekit:scroll';\nconst INDEX_KEY = 'sveltekit:index';\n\nconst routes = parse(nodes, server_loads, dictionary, matchers);\n\nconst default_layout_loader = nodes[0];\nconst default_error_loader = nodes[1];\n\n// we import the root layout/error nodes eagerly, so that\n// connectivity errors after initialisation don't nuke the app\ndefault_layout_loader();\ndefault_error_loader();\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n// TODO remove for 1.0\n/** @type {Record<string, true>} */\nlet warned_about_attributes = {};\n\nfunction check_for_removed_attributes() {\n\tconst attrs = ['prefetch', 'noscroll', 'reload'];\n\tfor (const attr of attrs) {\n\t\tif (document.querySelector(`[sveltekit\\\\:${attr}]`)) {\n\t\t\tif (!warned_about_attributes[attr]) {\n\t\t\t\twarned_about_attributes[attr] = true;\n\t\t\t\tconsole.error(\n\t\t\t\t\t`The sveltekit:${attr} attribute has been replaced with data-sveltekit-${attr}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {{\n *   target: Element;\n *   base: string;\n *   trailing_slash: import('types').TrailingSlash;\n * }} opts\n * @returns {import('./types').Client}\n */\nexport function create_client({ target, base, trailing_slash }) {\n\t/** @type {Array<((url: URL) => boolean)>} */\n\tconst invalidated = [];\n\n\t/** @type {{id: string, promise: Promise<import('./types').NavigationResult | undefined>} | null} */\n\tlet load_cache = null;\n\n\tconst callbacks = {\n\t\t/** @type {Array<(navigation: import('types').Navigation & { cancel: () => void }) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(navigation: import('types').Navigation) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\tbranch: [],\n\t\terror: null,\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null\n\t};\n\n\t/** this being true means we SSR'd */\n\tlet hydrated = false;\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet force_invalidation = false;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY];\n\n\tif (!current_history_index) {\n\t\t// we use Date.now() as an offset so that cross-document navigations\n\t\t// within the app don't result in data loss\n\t\tcurrent_history_index = Date.now();\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(\n\t\t\t{ ...history.state, [INDEX_KEY]: current_history_index },\n\t\t\t'',\n\t\t\tlocation.href\n\t\t);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) {\n\t\thistory.scrollRestoration = 'manual';\n\t\tscrollTo(scroll.x, scroll.y);\n\t}\n\n\tlet hash_navigating = false;\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/** @type {Promise<void> | null} */\n\tlet pending_invalidate;\n\n\tasync function invalidate() {\n\t\t// Accept all invalidations as they come, don't swallow any while another invalidation\n\t\t// is running because subsequent invalidations may make earlier ones outdated,\n\t\t// but batch multiple synchronous invalidations.\n\t\tpending_invalidate = pending_invalidate || Promise.resolve();\n\t\tawait pending_invalidate;\n\t\tpending_invalidate = null;\n\n\t\tconst url = new URL(location.href);\n\t\tconst intent = get_navigation_intent(url, true);\n\t\t// Clear prefetch, it might be affected by the invalidation.\n\t\t// Also solves an edge case where a prefetch is triggered, the navigation for it\n\t\t// was then triggered and is still running while the invalidation kicks in,\n\t\t// at which point the invalidation should take over and \"win\".\n\t\tload_cache = null;\n\t\tawait update(intent, url, []);\n\t}\n\n\t/**\n\t * @param {string | URL} url\n\t * @param {{ noscroll?: boolean; replaceState?: boolean; keepfocus?: boolean; state?: any }} opts\n\t * @param {string[]} redirect_chain\n\t * @param {{}} [nav_token]\n\t */\n\tasync function goto(\n\t\turl,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} },\n\t\tredirect_chain,\n\t\tnav_token\n\t) {\n\t\tif (typeof url === 'string') {\n\t\t\turl = new URL(url, get_base_uri(document));\n\t\t}\n\n\t\treturn navigate({\n\t\t\turl,\n\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\tkeepfocus,\n\t\t\tredirect_chain,\n\t\t\tdetails: {\n\t\t\t\tstate,\n\t\t\t\treplaceState\n\t\t\t},\n\t\t\tnav_token,\n\t\t\taccepted: () => {},\n\t\t\tblocked: () => {},\n\t\t\ttype: 'goto'\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tasync function prefetch(url) {\n\t\tconst intent = get_navigation_intent(url, false);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\tload_cache = { id: intent.id, promise: load_route(intent) };\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/**\n\t * Returns `true` if update completes, `false` if it is aborted\n\t * @param {import('./types').NavigationIntent | undefined} intent\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t * @param {{}} [nav_token] To distinguish between different navigation events and determine the latest. Needed for example for redirects to keep the original token\n\t * @param {() => void} [callback]\n\t */\n\tasync function update(intent, url, redirect_chain, opts, nav_token = {}, callback) {\n\t\ttoken = nav_token;\n\t\tlet navigation_result = intent && (await load_route(intent));\n\n\t\tif (!navigation_result) {\n\t\t\tnavigation_result = await server_fallback(\n\t\t\t\turl,\n\t\t\t\tnull,\n\t\t\t\thandle_error(new Error(`Not found: ${url.pathname}`), { url, params: {}, routeId: null }),\n\t\t\t\t404\n\t\t\t);\n\t\t}\n\n\t\t// if this is an internal navigation intent, use the normalized\n\t\t// URL for the rest of the function\n\t\turl = intent?.url || url;\n\n\t\t// abort if user navigated during update\n\t\tif (token !== nav_token) return false;\n\n\t\tif (navigation_result.type === 'redirect') {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: handle_error(new Error('Redirect loop'), { url, params: {}, routeId: null }),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: null\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgoto(\n\t\t\t\t\tnew URL(navigation_result.location, url).href,\n\t\t\t\t\t{},\n\t\t\t\t\t[...redirect_chain, url.pathname],\n\t\t\t\t\tnav_token\n\t\t\t\t);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (navigation_result.props?.page?.status >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\t// reset invalidation only after a finished navigation. If there are redirects or\n\t\t// additional invalidations, they should get the same invalidation treatment\n\t\tinvalidated.length = 0;\n\t\tforce_invalidation = false;\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\t// reset prefetch synchronously after the history state has been set to avoid race conditions\n\t\tload_cache = null;\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\tif (navigation_result.props.page) {\n\t\t\t\tnavigation_result.props.page.url = url;\n\t\t\t}\n\n\t\t\tconst post_update = pre_update();\n\t\t\troot.$set(navigation_result.props);\n\t\t\tpost_update();\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\t// Reset page selection and focus\n\t\t\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\t\t\tconst root = document.body;\n\t\t\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\t\t\troot.tabIndex = -1;\n\t\t\t\troot.focus({ preventScroll: true });\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\t});\n\n\t\t\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\t\t\tif (tabindex !== null) {\n\t\t\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t\t\t} else {\n\t\t\t\t\troot.removeAttribute('tabindex');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tautoscroll = true;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tif (callback) callback();\n\n\t\tupdating = false;\n\t}\n\n\t/** @param {import('./types').NavigationFinished} result */\n\tfunction initialize(result) {\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-sveltekit]');\n\t\tif (style) style.remove();\n\n\t\tpage = result.props.page;\n\n\t\tconst post_update = pre_update();\n\t\troot = new Root({\n\t\t\ttarget,\n\t\t\tprops: { ...result.props, stores },\n\t\t\thydrate: true\n\t\t});\n\t\tpost_update();\n\n\t\t/** @type {import('types').Navigation} */\n\t\tconst navigation = {\n\t\t\tfrom: null,\n\t\t\tto: add_url_properties('to', {\n\t\t\t\tparams: current.params,\n\t\t\t\trouteId: current.route?.id ?? null,\n\t\t\t\turl: new URL(location.href)\n\t\t\t}),\n\t\t\ttype: 'load'\n\t\t};\n\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\tstarted = true;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error: App.Error | null;\n\t *   route: import('types').CSRRoute | null;\n\t *   form?: Record<string, any> | null;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\troute,\n\t\tform\n\t}) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\n\t\t/** @type {import('./types').NavigationFinished} */\n\t\tconst result = {\n\t\t\ttype: 'loaded',\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\terror,\n\t\t\t\troute\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((branch_node) => branch_node.node.component)\n\t\t\t}\n\t\t};\n\n\t\tif (form !== undefined) {\n\t\t\tresult.props.form = form;\n\t\t}\n\n\t\tlet data = {};\n\t\tlet data_changed = !page;\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tconst node = filtered[i];\n\t\t\tdata = { ...data, ...node.data };\n\n\t\t\t// Only set props if the node actually updated. This prevents needless rerenders.\n\t\t\tif (data_changed || !current.branch.some((previous) => previous === node)) {\n\t\t\t\tresult.props[`data_${i}`] = data;\n\t\t\t\tdata_changed = data_changed || Object.keys(node.data ?? {}).length > 0;\n\t\t\t}\n\t\t}\n\t\tif (!data_changed) {\n\t\t\t// If nothing was added, and the object entries are the same length, this means\n\t\t\t// that nothing was removed either and therefore the data is the same as the previous one.\n\t\t\t// This would be more readable with a separate boolean but that would cost us some bytes.\n\t\t\tdata_changed = Object.keys(page.data).length !== Object.keys(data).length;\n\t\t}\n\n\t\tconst page_changed =\n\t\t\t!current.url ||\n\t\t\turl.href !== current.url.href ||\n\t\t\tcurrent.error !== error ||\n\t\t\tform !== undefined ||\n\t\t\tdata_changed;\n\n\t\tif (page_changed) {\n\t\t\tresult.props.page = {\n\t\t\t\terror,\n\t\t\t\tparams,\n\t\t\t\trouteId: route && route.id,\n\t\t\t\tstatus,\n\t\t\t\turl,\n\t\t\t\tform,\n\t\t\t\t// The whole page store is updated, but this way the object reference stays the same\n\t\t\t\tdata: data_changed ? data : page.data\n\t\t\t};\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Call the load function of the given node, if it exists.\n\t * If `server_data` is passed, this is treated as the initial run and the page endpoint is not requested.\n\t *\n\t * @param {{\n\t *   loader: import('types').CSRPageNodeLoader;\n\t * \t parent: () => Promise<Record<string, any>>;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   routeId: string | null;\n\t * \t server_data_node: import('./types').DataNode | null;\n\t * }} options\n\t * @returns {Promise<import('./types').BranchNode>}\n\t */\n\tasync function load_node({ loader, parent, url, params, routeId, server_data_node }) {\n\t\t/** @type {Record<string, any> | null} */\n\t\tlet data = null;\n\n\t\t/** @type {import('types').Uses} */\n\t\tconst uses = {\n\t\t\tdependencies: new Set(),\n\t\t\tparams: new Set(),\n\t\t\tparent: false,\n\t\t\turl: false\n\t\t};\n\n\t\tconst node = await loader();\n\n\t\tif (node.shared?.load) {\n\t\t\t/** @param {string[]} deps */\n\t\t\tfunction depends(...deps) {\n\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\tconst { href } = new URL(dep, url);\n\t\t\t\t\tuses.dependencies.add(href);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {import('types').LoadEvent} */\n\t\t\tconst load_input = {\n\t\t\t\trouteId,\n\t\t\t\tparams: new Proxy(params, {\n\t\t\t\t\tget: (target, key) => {\n\t\t\t\t\t\tuses.params.add(/** @type {string} */ (key));\n\t\t\t\t\t\treturn target[/** @type {string} */ (key)];\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tdata: server_data_node?.data ?? null,\n\t\t\t\turl: make_trackable(url, () => {\n\t\t\t\t\tuses.url = true;\n\t\t\t\t}),\n\t\t\t\tasync fetch(resource, init) {\n\t\t\t\t\tlet requested;\n\n\t\t\t\t\tif (resource instanceof Request) {\n\t\t\t\t\t\trequested = resource.url;\n\n\t\t\t\t\t\t// we're not allowed to modify the received `Request` object, so in order\n\t\t\t\t\t\t// to fixup relative urls we create a new equivalent `init` object instead\n\t\t\t\t\t\tinit = {\n\t\t\t\t\t\t\t// the request body must be consumed in memory until browsers\n\t\t\t\t\t\t\t// implement streaming request bodies and/or the body getter\n\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\tresource.method === 'GET' || resource.method === 'HEAD'\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: await resource.blob(),\n\t\t\t\t\t\t\tcache: resource.cache,\n\t\t\t\t\t\t\tcredentials: resource.credentials,\n\t\t\t\t\t\t\theaders: resource.headers,\n\t\t\t\t\t\t\tintegrity: resource.integrity,\n\t\t\t\t\t\t\tkeepalive: resource.keepalive,\n\t\t\t\t\t\t\tmethod: resource.method,\n\t\t\t\t\t\t\tmode: resource.mode,\n\t\t\t\t\t\t\tredirect: resource.redirect,\n\t\t\t\t\t\t\treferrer: resource.referrer,\n\t\t\t\t\t\t\treferrerPolicy: resource.referrerPolicy,\n\t\t\t\t\t\t\tsignal: resource.signal,\n\t\t\t\t\t\t\t...init\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequested = resource;\n\t\t\t\t\t}\n\n\t\t\t\t\t// we must fixup relative urls so they are resolved from the target page\n\t\t\t\t\tconst resolved = new URL(requested, url).href;\n\t\t\t\t\tdepends(resolved);\n\n\t\t\t\t\t// prerendered pages may be served from any origin, so `initial_fetch` urls shouldn't be resolved\n\t\t\t\t\treturn started\n\t\t\t\t\t\t? subsequent_fetch(resolved, init)\n\t\t\t\t\t\t: initial_fetch(requested, resolved, init);\n\t\t\t\t},\n\t\t\t\tsetHeaders: () => {}, // noop\n\t\t\t\tdepends,\n\t\t\t\tparent() {\n\t\t\t\t\tuses.parent = true;\n\t\t\t\t\treturn parent();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// TODO remove this for 1.0\n\t\t\tObject.defineProperties(load_input, {\n\t\t\t\tprops: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'@migration task: Replace `props` with `data` stuff https://github.com/sveltejs/kit/discussions/5774#discussioncomment-3292693'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t},\n\t\t\t\tsession: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'session is no longer available. See https://github.com/sveltejs/kit/discussions/5883'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t},\n\t\t\t\tstuff: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'@migration task: Remove stuff https://github.com/sveltejs/kit/discussions/5774#discussioncomment-3292693'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tlock_fetch();\n\t\t\t\t\tdata = (await node.shared.load.call(null, load_input)) ?? null;\n\t\t\t\t} finally {\n\t\t\t\t\tunlock_fetch();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdata = (await node.shared.load.call(null, load_input)) ?? null;\n\t\t\t}\n\t\t\tdata = data ? await unwrap_promises(data) : null;\n\t\t}\n\n\t\treturn {\n\t\t\tnode,\n\t\t\tloader,\n\t\t\tserver: server_data_node,\n\t\t\tshared: node.shared?.load ? { type: 'data', data, uses } : null,\n\t\t\tdata: data ?? server_data_node?.data ?? null\n\t\t};\n\t}\n\n\t/**\n\t * @param {boolean} url_changed\n\t * @param {boolean} parent_changed\n\t * @param {import('types').Uses | undefined} uses\n\t * @param {Record<string, string>} params\n\t */\n\tfunction has_changed(url_changed, parent_changed, uses, params) {\n\t\tif (force_invalidation) return true;\n\n\t\tif (!uses) return false;\n\n\t\tif (uses.parent && parent_changed) return true;\n\t\tif (uses.url && url_changed) return true;\n\n\t\tfor (const param of uses.params) {\n\t\t\tif (params[param] !== current.params[param]) return true;\n\t\t}\n\n\t\tfor (const href of uses.dependencies) {\n\t\t\tif (invalidated.some((fn) => fn(new URL(href)))) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {import('types').ServerDataNode | import('types').ServerDataSkippedNode | null} node\n\t * @param {import('./types').DataNode | null} [previous]\n\t * @returns {import('./types').DataNode | null}\n\t */\n\tfunction create_data_node(node, previous) {\n\t\tif (node?.type === 'data') {\n\t\t\treturn {\n\t\t\t\ttype: 'data',\n\t\t\t\tdata: node.data,\n\t\t\t\tuses: {\n\t\t\t\t\tdependencies: new Set(node.uses.dependencies ?? []),\n\t\t\t\t\tparams: new Set(node.uses.params ?? []),\n\t\t\t\t\tparent: !!node.uses.parent,\n\t\t\t\t\turl: !!node.uses.url\n\t\t\t\t}\n\t\t\t};\n\t\t} else if (node?.type === 'skip') {\n\t\t\treturn previous ?? null;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @returns {Promise<import('./types').NavigationResult | undefined>}\n\t */\n\tasync function load_route({ id, invalidating, url, params, route }) {\n\t\tif (load_cache?.id === id) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tconst { errors, layouts, leaf } = route;\n\n\t\tconst loaders = [...layouts, leaf];\n\n\t\t// preload modules to avoid waterfall, but handle rejections\n\t\t// so they don't get reported to Sentry et al (we don't need\n\t\t// to act on the failures at this point)\n\t\terrors.forEach((loader) => loader?.().catch(() => {}));\n\t\tloaders.forEach((loader) => loader?.[1]().catch(() => {}));\n\n\t\t/** @type {import('types').ServerData | null} */\n\t\tlet server_data = null;\n\n\t\tconst url_changed = current.url ? id !== current.url.pathname + current.url.search : false;\n\n\t\tconst invalid_server_nodes = loaders.reduce((acc, loader, i) => {\n\t\t\tconst previous = current.branch[i];\n\n\t\t\tconst invalid =\n\t\t\t\t!!loader?.[0] &&\n\t\t\t\t(previous?.loader !== loader[1] ||\n\t\t\t\t\thas_changed(url_changed, acc.some(Boolean), previous.server?.uses, params));\n\n\t\t\tacc.push(invalid);\n\t\t\treturn acc;\n\t\t}, /** @type {boolean[]} */ ([]));\n\n\t\tif (invalid_server_nodes.some(Boolean)) {\n\t\t\ttry {\n\t\t\t\tserver_data = await load_data(url, invalid_server_nodes);\n\t\t\t} catch (error) {\n\t\t\t\treturn load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: handle_error(error, { url, params, routeId: route.id }),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: route.id\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (server_data.type === 'redirect') {\n\t\t\t\treturn server_data;\n\t\t\t}\n\t\t}\n\n\t\tconst server_data_nodes = server_data?.nodes;\n\n\t\tlet parent_changed = false;\n\n\t\tconst branch_promises = loaders.map(async (loader, i) => {\n\t\t\tif (!loader) return;\n\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tconst previous = current.branch[i];\n\n\t\t\tconst server_data_node = server_data_nodes?.[i];\n\n\t\t\t// re-use data from previous load if it's still valid\n\t\t\tconst valid =\n\t\t\t\t(!server_data_node || server_data_node.type === 'skip') &&\n\t\t\t\tloader[1] === previous?.loader &&\n\t\t\t\t!has_changed(url_changed, parent_changed, previous.shared?.uses, params);\n\t\t\tif (valid) return previous;\n\n\t\t\tparent_changed = true;\n\n\t\t\tif (server_data_node?.type === 'error') {\n\t\t\t\t// rethrow and catch below\n\t\t\t\tthrow server_data_node;\n\t\t\t}\n\n\t\t\treturn load_node({\n\t\t\t\tloader: loader[1],\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\trouteId: route.id,\n\t\t\t\tparent: async () => {\n\t\t\t\t\tconst data = {};\n\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\tObject.assign(data, (await branch_promises[j])?.data);\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\t},\n\t\t\t\tserver_data_node: create_data_node(\n\t\t\t\t\t// server_data_node is undefined if it wasn't reloaded from the server;\n\t\t\t\t\t// and if current loader uses server data, we want to reuse previous data.\n\t\t\t\t\tserver_data_node === undefined && loader[0] ? { type: 'skip' } : server_data_node ?? null,\n\t\t\t\t\tprevious?.server\n\t\t\t\t)\n\t\t\t});\n\t\t});\n\n\t\t// if we don't do this, rejections will be unhandled\n\t\tfor (const p of branch_promises) p.catch(() => {});\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tconst branch = [];\n\n\t\tfor (let i = 0; i < loaders.length; i += 1) {\n\t\t\tif (loaders[i]) {\n\t\t\t\ttry {\n\t\t\t\t\tbranch.push(await branch_promises[i]);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err instanceof Redirect) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: 'redirect',\n\t\t\t\t\t\t\tlocation: err.location\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tlet status = 500;\n\t\t\t\t\t/** @type {App.Error} */\n\t\t\t\t\tlet error;\n\n\t\t\t\t\tif (server_data_nodes?.includes(/** @type {import('types').ServerErrorNode} */ (err))) {\n\t\t\t\t\t\t// this is the server error rethrown above, reconstruct but don't invoke\n\t\t\t\t\t\t// the client error handler; it should've already been handled on the server\n\t\t\t\t\t\tstatus = /** @type {import('types').ServerErrorNode} */ (err).status ?? status;\n\t\t\t\t\t\terror = /** @type {import('types').ServerErrorNode} */ (err).error;\n\t\t\t\t\t} else if (err instanceof HttpError) {\n\t\t\t\t\t\tstatus = err.status;\n\t\t\t\t\t\terror = err.body;\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror = handle_error(err, { params, url, routeId: route.id });\n\t\t\t\t\t}\n\n\t\t\t\t\tconst error_load = await load_nearest_error_page(i, branch, errors);\n\t\t\t\t\tif (error_load) {\n\t\t\t\t\t\treturn await get_navigation_result_from_branch({\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\tbranch: branch.slice(0, error_load.idx).concat(error_load.node),\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\troute\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if we get here, it's because the root `load` function failed,\n\t\t\t\t\t\t// and we need to fall back to the server\n\t\t\t\t\t\treturn await server_fallback(url, route.id, error, status);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// push an empty slot so we can rewind past gaps to the\n\t\t\t\t// layout that corresponds with an +error.svelte page\n\t\t\t\tbranch.push(undefined);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tbranch,\n\t\t\tstatus: 200,\n\t\t\terror: null,\n\t\t\troute,\n\t\t\t// Reset `form` on navigation, but not invalidation\n\t\t\tform: invalidating ? undefined : null\n\t\t});\n\t}\n\n\t/**\n\t * @param {number} i Start index to backtrack from\n\t * @param {Array<import('./types').BranchNode | undefined>} branch Branch to backtrack\n\t * @param {Array<import('types').CSRPageNodeLoader | undefined>} errors All error pages for this branch\n\t * @returns {Promise<{idx: number; node: import('./types').BranchNode} | undefined>}\n\t */\n\tasync function load_nearest_error_page(i, branch, errors) {\n\t\twhile (i--) {\n\t\t\tif (errors[i]) {\n\t\t\t\tlet j = i;\n\t\t\t\twhile (!branch[j]) j -= 1;\n\t\t\t\ttry {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tidx: j + 1,\n\t\t\t\t\t\tnode: {\n\t\t\t\t\t\t\tnode: await /** @type {import('types').CSRPageNodeLoader } */ (errors[i])(),\n\t\t\t\t\t\t\tloader: /** @type {import('types').CSRPageNodeLoader } */ (errors[i]),\n\t\t\t\t\t\t\tdata: {},\n\t\t\t\t\t\t\tserver: null,\n\t\t\t\t\t\t\tshared: null\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: App.Error;\n\t *   url: URL;\n\t *   routeId: string | null\n\t * }} opts\n\t * @returns {Promise<import('./types').NavigationFinished>}\n\t */\n\tasync function load_root_error_page({ status, error, url, routeId }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst node = await default_layout_loader();\n\n\t\t/** @type {import('types').ServerDataNode | null} */\n\t\tlet server_data_node = null;\n\n\t\tif (node.server) {\n\t\t\t// TODO post-https://github.com/sveltejs/kit/discussions/6124 we can use\n\t\t\t// existing root layout data\n\t\t\ttry {\n\t\t\t\tconst server_data = await load_data(url, [true]);\n\n\t\t\t\tif (\n\t\t\t\t\tserver_data.type !== 'data' ||\n\t\t\t\t\t(server_data.nodes[0] && server_data.nodes[0].type !== 'data')\n\t\t\t\t) {\n\t\t\t\t\tthrow 0;\n\t\t\t\t}\n\n\t\t\t\tserver_data_node = server_data.nodes[0] ?? null;\n\t\t\t} catch {\n\t\t\t\t// at this point we have no choice but to fall back to the server, if it wouldn't\n\t\t\t\t// bring us right back here, turning this into an endless loop\n\t\t\t\tif (url.origin !== location.origin || url.pathname !== location.pathname || hydrated) {\n\t\t\t\t\tawait native_navigation(url);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst root_layout = await load_node({\n\t\t\tloader: default_layout_loader,\n\t\t\turl,\n\t\t\tparams,\n\t\t\trouteId,\n\t\t\tparent: () => Promise.resolve({}),\n\t\t\tserver_data_node: create_data_node(server_data_node)\n\t\t});\n\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst root_error = {\n\t\t\tnode: await default_error_loader(),\n\t\t\tloader: default_error_loader,\n\t\t\tshared: null,\n\t\t\tserver: null,\n\t\t\tdata: null\n\t\t};\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\troute: null\n\t\t});\n\t}\n\n\t/**\n\t * @param {URL} url\n\t * @param {boolean} invalidating\n\t */\n\tfunction get_navigation_intent(url, invalidating) {\n\t\tif (is_external_url(url)) return;\n\n\t\tconst path = decodeURI(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\tconst normalized = new URL(\n\t\t\t\t\turl.origin + normalize_path(url.pathname, trailing_slash) + url.search + url.hash\n\t\t\t\t);\n\t\t\t\tconst id = normalized.pathname + normalized.search;\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = { id, invalidating, route, params: decode_params(params), url: normalized };\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @param {URL} url */\n\tfunction is_external_url(url) {\n\t\treturn url.origin !== location.origin || !url.pathname.startsWith(base);\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   type: import('types').NavigationType;\n\t *   delta?: number;\n\t *   nav_token?: {};\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({\n\t\turl,\n\t\tscroll,\n\t\tkeepfocus,\n\t\tredirect_chain,\n\t\tdetails,\n\t\ttype,\n\t\tdelta,\n\t\tnav_token,\n\t\taccepted,\n\t\tblocked\n\t}) {\n\t\tlet should_block = false;\n\n\t\tconst intent = get_navigation_intent(url, false);\n\n\t\t/** @type {import('types').Navigation} */\n\t\tconst navigation = {\n\t\t\tfrom: add_url_properties('from', {\n\t\t\t\tparams: current.params,\n\t\t\t\trouteId: current.route?.id ?? null,\n\t\t\t\turl: current.url\n\t\t\t}),\n\t\t\tto: add_url_properties('to', {\n\t\t\t\tparams: intent?.params ?? null,\n\t\t\t\trouteId: intent?.route.id ?? null,\n\t\t\t\turl\n\t\t\t}),\n\t\t\ttype\n\t\t};\n\n\t\tif (delta !== undefined) {\n\t\t\tnavigation.delta = delta;\n\t\t}\n\n\t\tconst cancellable = {\n\t\t\t...navigation,\n\t\t\tcancel: () => {\n\t\t\t\tshould_block = true;\n\t\t\t}\n\t\t};\n\n\t\tcallbacks.before_navigate.forEach((fn) => fn(cancellable));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tif (started) {\n\t\t\tstores.navigating.set(navigation);\n\t\t}\n\n\t\tawait update(\n\t\t\tintent,\n\t\t\turl,\n\t\t\tredirect_chain,\n\t\t\t{\n\t\t\t\tscroll,\n\t\t\t\tkeepfocus,\n\t\t\t\tdetails\n\t\t\t},\n\t\t\tnav_token,\n\t\t\t() => {\n\t\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t\t\tstores.navigating.set(null);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Does a full page reload if it wouldn't result in an endless loop in the SPA case\n\t * @param {URL} url\n\t * @param {string | null} routeId\n\t * @param {App.Error} error\n\t * @param {number} status\n\t * @returns {Promise<import('./types').NavigationFinished>}\n\t */\n\tasync function server_fallback(url, routeId, error, status) {\n\t\tif (url.origin === location.origin && url.pathname === location.pathname && !hydrated) {\n\t\t\t// We would reload the same page we're currently on, which isn't hydrated,\n\t\t\t// which means no SSR, which means we would end up in an endless loop\n\t\t\treturn await load_root_error_page({\n\t\t\t\tstatus,\n\t\t\t\terror,\n\t\t\t\turl,\n\t\t\t\trouteId\n\t\t\t});\n\t\t}\n\t\treturn await native_navigation(url);\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\tif (import.meta.hot) {\n\t\timport.meta.hot.on('vite:beforeUpdate', () => {\n\t\t\tif (current.error) location.reload();\n\t\t});\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (import.meta.env.DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => goto(href, opts, []),\n\n\t\tinvalidate: (resource) => {\n\t\t\tif (resource === undefined) {\n\t\t\t\t// TODO remove for 1.0\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'`invalidate()` (with no arguments) has been replaced by `invalidateAll()`'\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof resource === 'function') {\n\t\t\t\tinvalidated.push(resource);\n\t\t\t} else {\n\t\t\t\tconst { href } = new URL(resource, location.href);\n\t\t\t\tinvalidated.push((url) => url.href === href);\n\t\t\t}\n\n\t\t\treturn invalidate();\n\t\t},\n\n\t\tinvalidateAll: () => {\n\t\t\tforce_invalidation = true;\n\t\t\treturn invalidate();\n\t\t},\n\n\t\tprefetch: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait prefetch(url);\n\t\t},\n\n\t\t// TODO rethink this API\n\t\tprefetch_routes: async (pathnames) => {\n\t\t\tconst matching = pathnames\n\t\t\t\t? routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)))\n\t\t\t\t: routes;\n\n\t\t\tconst promises = matching.map((r) => {\n\t\t\t\treturn Promise.all([...r.layouts, r.leaf].map((load) => load?.[1]()));\n\t\t\t});\n\n\t\t\tawait Promise.all(promises);\n\t\t},\n\n\t\tapply_action: async (result) => {\n\t\t\tif (result.type === 'error') {\n\t\t\t\tconst url = new URL(location.href);\n\n\t\t\t\tconst { branch, route } = current;\n\t\t\t\tif (!route) return;\n\n\t\t\t\tconst error_load = await load_nearest_error_page(\n\t\t\t\t\tcurrent.branch.length,\n\t\t\t\t\tbranch,\n\t\t\t\t\troute.errors\n\t\t\t\t);\n\t\t\t\tif (error_load) {\n\t\t\t\t\tconst navigation_result = await get_navigation_result_from_branch({\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams: current.params,\n\t\t\t\t\t\tbranch: branch.slice(0, error_load.idx).concat(error_load.node),\n\t\t\t\t\t\tstatus: 500, // TODO might not be 500?\n\t\t\t\t\t\terror: result.error,\n\t\t\t\t\t\troute\n\t\t\t\t\t});\n\n\t\t\t\t\tcurrent = navigation_result.state;\n\n\t\t\t\t\tconst post_update = pre_update();\n\t\t\t\t\troot.$set(navigation_result.props);\n\t\t\t\t\tpost_update();\n\t\t\t\t}\n\t\t\t} else if (result.type === 'redirect') {\n\t\t\t\tgoto(result.location, {}, []);\n\t\t\t} else {\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst props = {\n\t\t\t\t\tform: result.data,\n\t\t\t\t\tpage: { ...page, form: result.data, status: result.status }\n\t\t\t\t};\n\t\t\t\tconst post_update = pre_update();\n\t\t\t\troot.$set(props);\n\t\t\t\tpost_update();\n\t\t\t}\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\t/** @type {import('types').Navigation & { cancel: () => void }} */\n\t\t\t\tconst navigation = {\n\t\t\t\t\tfrom: add_url_properties('from', {\n\t\t\t\t\t\tparams: current.params,\n\t\t\t\t\t\trouteId: current.route?.id ?? null,\n\t\t\t\t\t\turl: current.url\n\t\t\t\t\t}),\n\t\t\t\t\tto: null,\n\t\t\t\t\ttype: 'unload',\n\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t};\n\n\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/** @param {Event} event */\n\t\t\tconst trigger_prefetch = (event) => {\n\t\t\t\tconst { url, options } = find_anchor(event);\n\t\t\t\tif (url && options.prefetch) {\n\t\t\t\t\tif (is_external_url(url)) return;\n\t\t\t\t\tprefetch(url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/** @type {NodeJS.Timeout} */\n\t\t\tlet mousemove_timeout;\n\n\t\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\t\tconst handle_mousemove = (event) => {\n\t\t\t\tclearTimeout(mousemove_timeout);\n\t\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t\t// add a layer of indirection to address that\n\t\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t\t);\n\t\t\t\t}, 20);\n\t\t\t};\n\n\t\t\taddEventListener('touchstart', trigger_prefetch);\n\t\t\taddEventListener('mousemove', handle_mousemove);\n\t\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\taddEventListener('click', (event) => {\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst { a, url, options } = find_anchor(event);\n\t\t\t\tif (!a || !url) return;\n\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\n\t\t\t\t// Ignore non-HTTP URL protocols (e.g. `mailto:`, `tel:`, `myapp:`, etc.)\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See:\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/4045\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/5725\n\t\t\t\tif (!is_svg_a_element && !(url.protocol === 'https:' || url.protocol === 'http:')) return;\n\n\t\t\t\t// Ignore if tag has\n\t\t\t\t// 1. 'download' attribute\n\t\t\t\t// 2. 'rel' attribute includes external\n\t\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\t\tif (a.hasAttribute('download') || rel.includes('external') || options.reload) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore if <a> has a target\n\t\t\t\tif (is_svg_a_element ? a.target.baseVal : a.target) return;\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [base, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && base === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\t// TODO why not update history here directly?\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tcurrent.url = url;\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: options.noscroll ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: url.href === location.href\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault(),\n\t\t\t\t\ttype: 'link'\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tconst delta = event.state[INDEX_KEY] - current_history_index;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\thistory.go(-delta);\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttype: 'popstate',\n\t\t\t\t\t\tdelta\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// fix link[rel=icon], because browsers will occasionally try to load relative\n\t\t\t// URLs after a pushState/replaceState, resulting in a 404 — see\n\t\t\t// https://github.com/sveltejs/kit/issues/3748#issuecomment-1125980897\n\t\t\tfor (const link of document.querySelectorAll('link')) {\n\t\t\t\tif (link.rel === 'icon') link.href = link.href;\n\t\t\t}\n\n\t\t\taddEventListener('pageshow', (event) => {\n\t\t\t\t// If the user navigates to another site and then uses the back button and\n\t\t\t\t// bfcache hits, we need to set navigating to null, the site doesn't know\n\t\t\t\t// the navigation away from it was successful.\n\t\t\t\t// Info about bfcache here: https://web.dev/bfcache\n\t\t\t\tif (event.persisted) {\n\t\t\t\t\tstores.navigating.set(null);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({\n\t\t\tstatus,\n\t\t\terror,\n\t\t\tnode_ids,\n\t\t\tparams,\n\t\t\trouteId,\n\t\t\tdata: server_data_nodes,\n\t\t\tform\n\t\t}) => {\n\t\t\thydrated = true;\n\n\t\t\tconst url = new URL(location.href);\n\n\t\t\t/** @type {import('./types').NavigationFinished | undefined} */\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tconst branch_promises = node_ids.map(async (n, i) => {\n\t\t\t\t\tconst server_data_node = server_data_nodes[i];\n\n\t\t\t\t\treturn load_node({\n\t\t\t\t\t\tloader: nodes[n],\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\trouteId,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tObject.assign(data, (await branch_promises[j]).data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tserver_data_node: create_data_node(server_data_node)\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tresult = await get_navigation_result_from_branch({\n\t\t\t\t\turl,\n\t\t\t\t\tparams,\n\t\t\t\t\tbranch: await Promise.all(branch_promises),\n\t\t\t\t\tstatus,\n\t\t\t\t\terror,\n\t\t\t\t\tform,\n\t\t\t\t\troute: routes.find((route) => route.id === routeId) ?? null\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tif (error instanceof Redirect) {\n\t\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t\t// a redirect but only in the browser\n\t\t\t\t\tawait native_navigation(new URL(error.location, location.href));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: error instanceof HttpError ? error.status : 500,\n\t\t\t\t\terror: handle_error(error, { url, params, routeId }),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n\nlet data_id = 1;\n\n/**\n * @param {URL} url\n * @param {boolean[]} invalid\n * @returns {Promise<import('types').ServerData>}\n */\nasync function load_data(url, invalid) {\n\tconst data_url = new URL(url);\n\tdata_url.pathname = url.pathname.replace(/\\/$/, '') + DATA_SUFFIX;\n\tdata_url.searchParams.set('__invalid', invalid.map((x) => (x ? 'y' : 'n')).join(''));\n\tdata_url.searchParams.set('__id', String(data_id++));\n\n\t// The __data.js file is generated by the server and looks like\n\t// `window.__sveltekit_data = ${devalue(data)}`. We do this instead\n\t// of `export const data` because modules are cached indefinitely,\n\t// and that would cause memory leaks.\n\t//\n\t// The data is read and deleted in the same tick as the promise\n\t// resolves, so it's not vulnerable to race conditions\n\tawait import(/* @vite-ignore */ data_url.href);\n\n\t// @ts-expect-error\n\tconst server_data = window.__sveltekit_data;\n\n\t// @ts-expect-error\n\tdelete window.__sveltekit_data;\n\n\treturn server_data;\n}\n\n/**\n * @param {unknown} error\n * @param {import('types').NavigationEvent} event\n * @returns {App.Error}\n */\nfunction handle_error(error, event) {\n\tif (error instanceof HttpError) {\n\t\treturn error.body;\n\t}\n\treturn (\n\t\thooks.handleError({ error, event }) ??\n\t\t/** @type {any} */ ({ message: event.routeId != null ? 'Internal Error' : 'Not Found' })\n\t);\n}\n\n// TODO remove for 1.0\nconst properties = [\n\t'hash',\n\t'href',\n\t'host',\n\t'hostname',\n\t'origin',\n\t'pathname',\n\t'port',\n\t'protocol',\n\t'search',\n\t'searchParams',\n\t'toString',\n\t'toJSON'\n];\n\n/**\n * @param {'from' | 'to'} type\n * @param {import('types').NavigationTarget} target\n */\nfunction add_url_properties(type, target) {\n\tfor (const prop of properties) {\n\t\tObject.defineProperty(target, prop, {\n\t\t\tget() {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`The navigation shape changed - ${type}.${prop} should now be ${type}.url.${prop}`\n\t\t\t\t);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\treturn target;\n}\n\nfunction pre_update() {\n\tif (__SVELTEKIT_DEV__) {\n\t\treturn () => {\n\t\t\tcheck_for_removed_attributes();\n\t\t};\n\t}\n\n\treturn () => {};\n}\n\nif (__SVELTEKIT_DEV__) {\n\t// Nasty hack to silence harmless warnings the user can do nothing about\n\tconst warn = console.warn;\n\tconsole.warn = (...args) => {\n\t\tif (\n\t\t\targs.length === 1 &&\n\t\t\t/<(Layout|Page)(_[\\w$]+)?> was created (with unknown|without expected) prop '(data|form)'/.test(\n\t\t\t\targs[0]\n\t\t\t)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\twarn(...args);\n\t};\n}\n","import { create_client } from './client.js';\nimport { init } from './singletons.js';\nimport { set_paths } from '../paths.js';\nimport { set_public_env } from '../env-public.js';\n\n/**\n * @param {{\n *   env: Record<string, string>;\n *   hydrate: Parameters<import('./types').Client['_hydrate']>[0];\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Element;\n *   trailing_slash: import('types').TrailingSlash;\n * }} opts\n */\nexport async function start({ env, hydrate, paths, target, trailing_slash }) {\n\tset_public_env(env);\n\tset_paths(paths);\n\n\tconst client = create_client({\n\t\ttarget,\n\t\tbase: paths.base,\n\t\ttrailing_slash\n\t});\n\n\tinit({ client });\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t} else {\n\t\tclient.goto(location.href, { replaceState: true });\n\t}\n\n\tclient._start_router();\n}\n"],"file":"_app/immutable/start-e282a178.js"}