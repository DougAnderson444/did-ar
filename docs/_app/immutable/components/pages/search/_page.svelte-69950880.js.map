{"version":3,"file":"_page.svelte-69950880.js","sources":["../../../../../../../../src/routes/search/+page.svelte"],"sourcesContent":["<script>\r\n\t// @ts-nocheck\r\n\r\n\t/**\r\n\t * Resolve the DID document for the given undername record in ARNS\r\n\t */\r\n\timport { onMount } from 'svelte';\r\n\timport Spinner from '$lib/Spinner.svelte';\r\n\timport { arnsResolver } from '@peerpiper/did-ar';\r\n\r\n\t// let arnsResolver;\r\n\tlet arnsName;\r\n\tlet directDidDoc;\r\n\tconst CacheOptions = { inMemory: true };\r\n\r\n\tonMount(async () => {\r\n\t\t// ({ arnsResolver } = await import('@peerpiper/did-ar')); // gives me warp issues\r\n\t\t// get params from location path\r\n\t\tconst queryString = window.location.search;\r\n\t\tconst params = new URLSearchParams(queryString);\r\n\r\n\t\t// split pathname and get the last part\r\n\t\tarnsName = params.get('name');\r\n\r\n\t\tconsole.log({ arnsName });\r\n\t});\r\n\r\n\t$: if (arnsResolver && arnsName) resolve(arnsName);\r\n\r\n\tasync function resolve(arnsName) {\r\n\t\tdirectDidDoc = await arnsResolver(arnsName, { CacheOptions });\r\n\t}\r\n</script>\r\n\r\n{#if directDidDoc}\r\n\t{JSON.stringify(directDidDoc, null, 2)}\r\n{:else}\r\n\t<Spinner>Loading DID Doc...</Spinner>\r\n{/if}\r\n"],"names":["t_value","ctx","dirty","set_data","t","arnsName","directDidDoc","CacheOptions","onMount","queryString","params","$$invalidate","resolve","arnsResolver"],"mappings":"mpBAmCE,IAAAA,EAAA,KAAK,UAAUC,EAAc,GAAA,KAAM,CAAC,EAAA,+DAApCC,EAAA,GAAAF,KAAAA,EAAA,KAAK,UAAUC,EAAc,GAAA,KAAM,CAAC,EAAA,KAAAE,EAAAC,EAAAJ,CAAA,6DAE5B,oBAAkB,cAAlB,oBAAkB,uGAHvBC,EAAY,GAAA,iVAvBZI,EACAC,QACEC,EAAY,CAAK,SAAU,IAEjCC,EAAO,SAAA,CAGA,MAAAC,EAAc,OAAO,SAAS,OAC9BC,EAAM,IAAO,gBAAgBD,CAAW,EAG9CE,EAAA,EAAAN,EAAWK,EAAO,IAAI,MAAM,CAAA,EAE5B,QAAQ,IAAG,CAAG,SAAAL,CAAQ,CAAA,IAKR,eAAAO,EAAQP,EAAQ,CAC9BM,EAAA,EAAAL,EAAqB,MAAAO,EAAaR,GAAY,aAAAE,CAAY,CAAA,CAAA,wCAHpDM,GAAgBR,GAAUO,EAAQP,CAAQ"}